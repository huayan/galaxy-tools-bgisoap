<project name="BGI-SOAP-Galaxy" default="symlink" basedir=".">
    <description>
        A build file for installing BGI SOAP into Galaxy
    </description>
    <!-- Set global properties for this build -->
    <property file="build.properties"/>
    <property name="galaxy.dir" location="./galaxy"/>
    <property name="tools.dir" location="./tools"/>
    <property name="bgisoap.dir" location="./${tools.dir}/bgisoap"/>
    <property name="build.dir" location="./build"/>
    <property name="lib.dir" location="./lib"/>
    <property name="galaxy.build.dir" location="${build.dir}/${galaxy.src}"/>
    <property name="tooldep.build.dir" location="${build.dir}/tooldep"/>
    <property name="tooldep.dir" location="./tooldep"/>
    <property name="tooldata.dir" location="./tool-data"/>
    <property name="tooldata.build.dir" location="${galaxy.build.dir}/tool-data"/>
    <property name="data.dir" location="./data"/>
    <property name="data.build.dir" location="${build.dir}/data"/>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Check if galaxy-central code has been downloaded -->
        <available file="./${galaxy.src}" type="dir" property="galaxysrc.found"/>
        <!-- Check build dir -->
        <available file="./${build.dir}" type="dir" property="build.found"/>
        <!-- Check if hg is on the command line, break if not -->
        <property environment="env" />
        <available file="hg" filepath="${env.PATH}" property="hg.present"/>
        <echo message="Is hg present on path?: ${hg.present}"/>
    </target>

    <target name="fail_no_hg" depends="init" unless="hg.present">
        <fail message="Mercurial is not on available on the path. Please install Mercurial."/>
    </target>

    <target name="download" depends="fail_no_hg" unless="galaxysrc.found">
        <taskdef resource="net/sourceforge/ant4hg/taskdefs/antlib.xml"
                 classpath="${lib.dir}/ant4hg-V0.07.jar"/>
        <!-- Clone repository to the given directory -->
        <echo message="Cloning galaxy repository - this step might take awhile"/>
        <mkdir dir="./${galaxy.src}"/>
        <hg cmd="clone" source="https://bitbucket.org/galaxy/${galaxy.src}"
            destination="./${galaxy.src}"/>
    </target>

    <target name="build" depends="download" unless="build.found">
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${galaxy.build.dir}"/>
        <mkdir dir="${tooldep.build.dir}"/>
        <mkdir dir="${data.build.dir}"/>
        <!-- Copy galaxy source into build directory -->
        <copy todir="${galaxy.build.dir}">
            <fileset dir="${galaxy.src}">
                    <exclude name="**/*universe_wsgi.ini.sample"/>
                <exclude name="**/*tool_data_table_conf.xml.sample"/>
            </fileset>
        </copy>
        <!-- Copy bgisoap tooldep directory into build directory -->
        <copy todir="${tooldep.build.dir}">
            <fileset dir="${tooldep.dir}"/>
        </copy>
        <!-- Copy data directory into build directory -->
        <copy todir="${data.build.dir}">
            <fileset dir="${data.dir}"/>
        </copy>
    </target>

    <target name="copy" depends="build">
        <!-- Need to update tool_config with list of tool names -->
        <!-- Need to insert the BGI SOAP declarations in the 3rd line of tool_config -->
        <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask"
                 classpath="${lib.dir}/xmltask.jar"/>
        <xmltask source="./galaxy-central/tool_conf.xml.main" dest="${galaxy.build.dir}/tool_conf.xml">
            <insert path="/toolbox" file="./galaxy/tool_config"/>
        </xmltask>

        <!-- Need to copy files into galaxy build  -->
        <mkdir dir="${galaxy.build.dir}/tools/bgisoap"/>
        <copy todir="${galaxy.build.dir}/tools/bgisoap">
            <fileset dir="${tools.dir}/bgisoap">
                <exclude name="**/*.iml"/>
            </fileset>
        </copy>
        <!-- Copy bgi soap code into build directory -->
        <copy file="${galaxy.dir}/galaxy.sh" todir="${galaxy.build.dir}"/>

        <replace file="${galaxy.build.dir}/galaxy.sh" propertyFile="./build.properties">
            <replacefilter token="@user@" property="galaxy.user"/>
        </replace>

        <!-- Make galaxy.sh and run.sh executable -->
        <chmod file="${galaxy.build.dir}/galaxy.sh" perm="ugo+x"/>
        <chmod file="${galaxy.build.dir}/run.sh" perm="ugo+x"/>

        <!-- Copy universe_wsgi.ini.sample file into galaxy build -->
        <copy file="${galaxy.dir}/universe_wsgi.ini.sample" todir="${galaxy.build.dir}"/>
        <replace file="${galaxy.build.dir}/universe_wsgi.ini.sample" propertyFile="./build.properties">
            <replacefilter token="@tooldep_path@" property="tooldep.location"/>
        </replace>

        <!-- Copy tool_data_table_conf.xml.sample file into galaxy build -->
        <copy file="${galaxy.dir}/tool_data_table_conf.xml.sample" todir="${galaxy.build.dir}"/>

        <!-- Copy bgisoap.loc into galaxy build tool-data directory -->
        <copy file="${tooldata.dir}/soapsplice.loc" todir="${tooldata.build.dir}"/>
        <copy file="${tooldata.dir}/soapsplice2.loc" todir="${tooldata.build.dir}"/>
    </target>

    <target name="symlink" depends="copy">
        <!-- Create default symlink to 0.1 folder -->
        <symlink link="${tooldep.build.dir}/bgisoap/default" resource="${tooldep.build.dir}/bgisoap/0.1" overwrite="true"/>
    </target>

    <target name="clean" description="clean up">
        <!-- Delete the galaxy build directory -->
        <delete dir="${galaxy.build.dir}"/>
    </target>

    <target name="purge" depends="clean" description="Removes build directory and galaxy source code">
        <delete dir="${build.dir}"/>
        <delete dir="${galaxy.src}"/>
    </target>
</project>