<tool id="soapdenovo"
      name="SOAPdenovo"
      version="0.1">
    <description>- perform de novo genome assembly</description>
    <requirements>
        <requirement type="package">bgisoap</requirement>
    </requirements>
    <command interpreter="python">
        soapdenovo.py

        ## Parameters required in config file
        ## Maximum read length
        --max_read_length=$max_read_length

        #for $i in $libraries
            ##[LIB]
            ## Average insert size
            --avg_ins=$i.avg_ins
            ## Reverse sequence?
            --reverse_seq=$i.reverse_seq
            ## Read operations
            --asm_flags=$i.asm_flags
            ## Rank
            --rank=$i.rank

            ## Check if using single or paired reads
            --type_of_data=$i.data_type.single_paired
            #if $i.data_type.single_paired == "single"
                --format_of_data=$i.data_type.data_format.fastq_fasta
                #if $i.data_type.data_format.fastq_fasta == "fastq"
                    --single_fastq_input1=$i.data_type.data_format.input1
                #else
                    --single_fasta_input1=$i.data_type.data_format.input1
                #end if
            #else
                --format_of_data=$i.data_type.data_format.fastq_fasta
                #if $i.data_type.data_format.fastq_fasta == "fastq"
                    --paired_fastq_input1=$i.data_type.data_format.input1
                    --paired_fastq_input2=$i.data_type.data_format.input2
                #else
                    --paired_fasta_input1=$i.data_type.data_format.input1
                    --paired_fasta_input2=$i.data_type.data_format.input2
                #end if
            #end if
        #end for

        ## Custom parameters
        ##--kmer_size=$kmer_size
        ##--num_threads=$num_threads
        ##--solve_tiny_reads=$solve_tiny_reads
        ##--remove_low_freq_kmers_single_occurence=$remove_low_freq_kmers_single_occurence
        ##--intra_scaffold_gap_closure=$intra_scaffold_gap_closure

        ## Output files
        --contig=$contig
        --scafseq=$scafseq

    </command>
    <inputs>
        <param name="max_read_length"
               type="integer"
               format="input"
               label="Maximum read length"
               value="90"/>
        <repeat name="libraries" title="libraries" min="1">
        <!-- [LIB] -->
        <param name="avg_ins"
               type="integer"
               label="Average insert size"
               value="200"/>
        <param name="reverse_seq"
               type="select"
               label="Reverse sequence?"
               value="0">
            <option value="0">forward-reverse</option>
            <option value="1">reverse-forward</option>
        </param>
        <param name="asm_flags"
               type="select"
               label="Which operations should the reads be used for?"
               value="3">
            <option value="3">Reads used for both contig and scaffold assembly</option>
            <option value="1">Reads only used for contig assembly</option>
            <option value="2">Reads only used for scaffold assembly</option>
        </param>
        <param name="rank"
               type="integer"
               label="Which order are the reads used while scaffolding"
               value="1"/>
        <!-- Actual sequence data - can be single or paired reads -->
        <conditional name="data_type">
            <param name="single_paired"
                   type="select"
                   label="What type of data are you using?">
                <option value="single">Single</option>
                <option value="paired">Paired</option>
            </param>
            <when value="single">
                <conditional name="data_format">
                    <param name="fastq_fasta"
                           type="select"
                           label="What type of data are you using?">
                        <option value="fastq">FASTQ</option>
                        <option value="fasta">FASTA</option>
                    </param>
                    <when value="fastq">
                        <param name="input1"
                               type="data"
                               format="input"
                               label="Forward FASTQ file">
                        </param>
                    </when>
                    <when value="fasta">
                        <param name="input1"
                               type="data"
                               format="input"
                               label="Forward FASTA file">
                        </param>
                    </when>
                </conditional>
            </when>
            <when value="paired">
                <conditional name="data_format">
                    <param name="fastq_fasta"
                           type="select"
                           label="What type of data are you using?">
                        <option value="fastq">FASTQ</option>
                        <option value="fasta">FASTA</option>
                    </param>
                    <when value="fastq">
                        <param name="input1"
                               type="data"
                               format="input"
                               label="Forward FASTQ file">
                        </param>
                        <param name="input2"
                               type="data"
                               format="input"
                               label="Reverse FASTQ file">
                        </param>
                    </when>
                    <when value="fasta">
                        <param name="input1"
                               type="data"
                               format="input"
                               label="Forward FASTA file">
                        </param>
                        <param name="input2"
                               type="data"
                               format="input"
                               label="Reverse FASTA file">
                        </param>
                    </when>
                </conditional>
            </when>
        </conditional>
        </repeat>
         <!--Other parameters -->
        <!--
        <param name="reads_info_file"
               type="Plain text"
               label="Information about solexa reads"/>
        <param name="init_memory_assumption"
               type="integer"
               label="Initiate the memory assumption to avoid further reallocation"/>
        <param name="kmer"
               type="integer"
               value="23"
               label="k value in kmer"/>
        <param name="ncpu"
               type="integer"
               value="8"
               label="Number of CPUs to use"/>
        <param name="fill_gaps"
               type="integer"
               label="Fill gaps in scaffold?"/>
        <param name="merge_level"
               type="select"
               value="1"
               label="Strength of merging similar sequences during contiging">
        <option value="0">0</option>
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        </param>
        <param name="kmer_freq_cutoff"
               type="integer"
               value="0"
               label="Delete kmers with frequency no larger than?"/>
        <param name="edge_cov_cutoff"
               type="integer"
               value="1"
               label="Delete edges with coverage no larger than?"/>
        <param name="gap_len_diff"
               type="integer"
               value="50"
               label="Allowed length difference between estimated and filled gaps"/>
        <param name="min_len"
               type="integer"
               value="100"
               label="Length of shortest contig for scaffolding"/>
        <param name="unmask_contigs"
               label="Unmask contigs with high coverage before scaffolding"/>
        <param name="min_len"
               type="select"
               value="no"
               label="Filter kmers containing N">
        <option value="no">No</option>
        <option value="yes">Yes</option>
        </param>
        <param name="contig_cov_cutoff"
               type="integer"
               value="2"
               label="Size of coverage by contigs to be deleted"/>
        <param name="info"
               label="Provide information between read and scaffold"/>
        <param name="locus_max_output"
               type="integer"
               value="5"
               label="Output number of transcriptome no more than in one locus"/>
        <param name="scaffold_struc"
               type="select"
               value="no"
               label="scaffold structure exists">
        <option value="no">No</option>
        <option value="yes">Yes</option>
        </param>
        -->
    </inputs>
    <outputs>
        <!-- Provide 2 files as output from SOAPdenovo-trans -->
        <data name="contig"
              type="data"
              format="output"
              label="Contig sequence file">
        </data>
        <data name="scafseq"
              type="data"
              format="output"
              label="Scaffold sequence file ">
        </data>
    </outputs>
    <tests>
        <test>
            <param name="max_rd_len"
                   value="50"/>
            <output name="output"
                    value="hello world"/>
        </test>
    </tests>
    <help>

**What it does**

SOAPdenovo is a novel short-read assembly method that can build a de novo draft assembly for the human-sized genomes.
The program is specially designed to assemble Illumina GA short reads. It creates new opportunities for building
reference sequences and carrying out accurate analyses of unexplored genomes in a cost effective way.

**System requirements**

SOAPdenovo is designed for assembling large plant and animal genomes, although it also works well on bacteria and fungal
genomes. It runs on 64-bit/32-bit Linux/MAC OS systems with a minimum of 5G physical memory. For big genomes like human,
approximately 150 GB memory is required.

**Notes**

This Galaxy tool is a wrapping of SOAPdenovo 1.05. This version supports large kmers of up to 127 to utilize long reads.
Three SOAPdenovo executables are provided:

    1. The 31mer version supports kmers up to 31.
    2. The 63mer version supports kmers up to 63 and required double the memory consumption compared to the 31mer
       version, even being used with kmer ≤31.
    3. The 127mer version supports kmer up to 127 and doubles the memory consumption than 63mer version, even being used
       with kmer ≤63.

Please note that the longer kmer, the quantity of nodes would decrease significantly, thus the memory consumption is
usually smaller than double with shifted version.

New parameter added in "pregraph" module. This parameter initiate the memory assumption to avoid further reallocation.
Unit of the parameter is GB. Without further reallocation, SOAPdenovo runs faster and provide the potential to eat up
all the memory of the machine. For example, if the workstation provides 50g free memory, use -a 50 in pregraph step,
then a static amount of 50g memory would be allocated before processing reads. This can also avoid being interrupted by
other users sharing the same machine.

**Options**

The assembler accepts read files in two formats: FASTA or FASTQ. Mate-pair relationship could be indicated in
two ways: two sequence files with reads in the same order belonging to a pair, or two adjacent reads in a single
file (FASTA only) belonging to a pair.

The flag "asm_flag" has three eligible values: 1 (reads only used for contig assembly), 2 (only used for
scaffold assembly) and 3 (used for both contig and scaffold assembly).

There are two types of paired-end libraries: a) forward-reverse, generated from fragmented DNA ends with typical
insert size less than 800 bp; b) reverse-forward, generated from circularizing libraries with typical insert
size greater than 2 Kb. User should set parameter for tag "reverse_seq" to indicate this: 0, forward-reverse; 1,
reverse-forward.

Gap filled bases now represented by lowercase characters in 'scafSeq' file.

Introduced SIMD instructions to boost the performance.

Several bugs fixed.

32bit version will not be supported in the future.

Data Preparation Module generates necessary data for SOAPdenovo to run "map" and "scaff" steps from Contigs generated by
SOAPdenovo or other assemblers with various length of kmer.

Options:

    -g [string] Prefix of output.
    -K [int] Kmer length.
    -c [string] Input Contigs FASTA. (Filename cannot be prefix.contig)

**Configuration file**

For large genome projects involving deep sequencing, data is usually organized as multiple read sequence files generated
from multiple libraries. Tools such as SOAPdenovo requires information on how to perform its job in the form of a
configuration file. This Galaxy wrapping of SOAPdenovo involves the creations of a configuration file based on user
parameters.

The configuration file has a section of global information, and then multiple library sections. The library information
and the information about the sequencing data generated from the library should be organized in the corresponding
library section. Right now only the information of maximal read length is included in the global information section.
Each library section starts with tag [LIB] and is followed by read file names along with their paths, read file format,
average insert size, library ranks and two other flags that tell the assembler how to treat these reads.

The assembler accepts read file in two formats: FASTA or FASTQ. Mate-pair relationship could be indicated in two ways:
two sequence files with reads in the same order belonging to a pair, or two adjacent reads in a single file (FASTA only)
belonging to a pair.

Libraries with the same "rank" are used at the same time for scaffolding in the order indicated by "rank".

The flag "asm_flag" has three eligible values: 1 (reads only used for contig assembly), 2 (only used for scaffold
assembly) and 3 (used for both contig and scaffold assembly).

There are two types of paired-end libraries: a) forward-reverse, generated from fragmented DNA ends with typical insert
size less than 800 bp; b) reverse-forward, generated from circularizing libraries with typical insert size greater than
2 Kb. User should set parameter for tag "reverse_seq" to indicate this: 0, forward-reverse; 1, reverse-forward.

**Output**

Two files are generated by the SOAPdenovo assembly:

1. A contig sequence file
2. A scaffold sequence file

    </help>
</tool>
